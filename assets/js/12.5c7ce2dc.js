(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{510:function(a,s,t){"use strict";t.r(s);var n=t(4),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"类与对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类与对象"}},[a._v("#")]),a._v(" 类与对象")]),a._v(" "),t("p",[a._v("对象变量不包含对象，只能够引用对象")]),a._v(" "),t("div",{staticClass:"language-Java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" str"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"清羽玄儿"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("             "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//str是对象变量，清羽玄儿这个字符串是字符串对象，str引用该字符串")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"一、gregoriancalendar类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、gregoriancalendar类"}},[a._v("#")]),a._v(" 一、GregorianCalendar类")]),a._v(" "),t("div",{staticClass:"language-Java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("GregorianCalendar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//可以传参年月日")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/*使用get方法获取GregorianCalendar对象的对应时间*/")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("GregorianCalendar")]),a._v(" time"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("GregorianCalendar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" month"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Calendar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("MONTH"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" weekday"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Calendar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("DAY_OF_WEEK"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/*使用set方法来设置想要的时间,可以一起设置年月日*/")]),a._v("\n\ndeadLine"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Calendar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("YEAR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2019")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\ndeadLine"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Calendar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("MONTH"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\ndeadLine"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Calendar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("DAY_OF_MONTH"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br")])]),t("h2",{attrs:{id:"二、自定义类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、自定义类"}},[a._v("#")]),a._v(" 二、自定义类")]),a._v(" "),t("p",[a._v("需要成员变量，建议写上空构造，避免在某些情况下发生一些隐蔽的问题。")]),a._v(" "),t("p",[a._v("注意在自定义类当中，为了不破坏封装性，不应该在公有方法里面返回私有的对象，这样会导致外部接受该变量的时候通过改变器改变该原对象的属性。")]),a._v(" "),t("p",[a._v("一个方法不可能改变基本数据类型的参数，但是对象引用作为参数就不一样了，可能会被改变")]),a._v(" "),t("h2",{attrs:{id:"三、final"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、final"}},[a._v("#")]),a._v(" 三、final")]),a._v(" "),t("p",[a._v("被final修饰的不能被改变")]),a._v(" "),t("h2",{attrs:{id:"四、-无参构造器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、-无参构造器"}},[a._v("#")]),a._v(" 四、 无参构造器")]),a._v(" "),t("p",[a._v("如果自定义一个类的时候没有写构造器，那么系统会自动分配一个无参构造器，这个构造器将所有的实例设置为默认值。\n所有的数值型设为0，布尔型设为false，对象设为null。\n如果只写了一个带参数的构造器，那么在实例化的时候出现不带参数的实例化的时候，就会报错，所以建议在写构造器的时候带上一个无参构造器")]),a._v(" "),t("h2",{attrs:{id:"五、-初始化块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、-初始化块"}},[a._v("#")]),a._v(" 五、 初始化块")]),a._v(" "),t("p",[a._v("在一个类的声明中，可以包含多个代码块，只要构造类的对象，这些块就会被执行。")]),a._v(" "),t("h2",{attrs:{id:"六、-类的职责"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六、-类的职责"}},[a._v("#")]),a._v(" 六、 类的职责")]),a._v(" "),t("p",[a._v("类的名字和方法要能够体现他们的职责，类的单一职责，将过多职责的类分解开。")])])}),[],!1,null,null,null);s.default=e.exports}}]);